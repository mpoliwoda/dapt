
//dapt code:
#define min(x,y)    ((x) < (y) ? (x) : (y))
#define max(x,y)    ((x) > (y) ? (x) : (y))

for (int i0 = 0; i0 < _PB_N; i0 += 1) {
  for (int w0 = 0; w0 <= (_PB_N - 1) / 8; w0 += 1) {
    #pragma omp parallel for
    for (int h0 = max(0, w0 - (_PB_N + 15) / 16 + 1); h0 <= min(w0, (_PB_N - 1) / 16); h0 += 1) {
      for (int i1 = 16 * h0; i1 <= min(_PB_N - 1, 16 * h0 + 15); i1 += 1) {
        for (int i2 = 16 * w0 - 16 * h0; i2 <= min(_PB_N - 1, 16 * w0 - 16 * h0 + 15); i2 += 1) {
          path[i1][i2] = ((path[i1][i2] < (path[i1][i0] + path[i0][i2])) ? path[i1][i2] : (path[i1][i0] + path[i0][i2]));
        }
      }
    }
  }
}
