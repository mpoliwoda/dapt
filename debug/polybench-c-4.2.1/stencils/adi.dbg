
#######################################################################

#oryginal loop:

#schedule:
{ domain: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_8[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_5[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_0[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_13[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_9[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_7[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_6[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_3[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_12[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_2[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_1[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_11[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_4[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_10[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N }", child: { schedule: "[_PB_TSTEPS, _PB_N] -> L_0[{ S_12[t, i] -> [(t)]; S_10[t, i, j] -> [(t)]; S_7[t, i] -> [(t)]; S_9[t, i] -> [(t)]; S_0[t, i] -> [(t)]; S_5[t, i] -> [(t)]; S_4[t, i, j] -> [(t)]; S_2[t, i] -> [(t)]; S_6[t, i, j] -> [(t)]; S_1[t, i] -> [(t)]; S_3[t, i, j] -> [(t)]; S_13[t, i, j] -> [(t)]; S_8[t, i] -> [(t)]; S_11[t, i, j] -> [(t)] }]", child: { sequence: [ { filter: "[_PB_TSTEPS, _PB_N] -> { S_0[t, i]; S_5[t, i]; S_4[t, i, j]; S_2[t, i]; S_6[t, i, j]; S_1[t, i]; S_3[t, i, j] }", child: { schedule: "[_PB_TSTEPS, _PB_N] -> L_1[{ S_0[t, i] -> [(i)]; S_5[t, i] -> [(i)]; S_4[t, i, j] -> [(i)]; S_2[t, i] -> [(i)]; S_6[t, i, j] -> [(i)]; S_1[t, i] -> [(i)]; S_3[t, i, j] -> [(i)] }]", child: { sequence: [ { filter: "[_PB_TSTEPS, _PB_N] -> { S_0[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_1[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_2[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_4[t, i, j]; S_3[t, i, j] }", child: { schedule: "[_PB_TSTEPS, _PB_N] -> L_2[{ S_4[t, i, j] -> [(j)]; S_3[t, i, j] -> [(j)] }]", child: { sequence: [ { filter: "[_PB_TSTEPS, _PB_N] -> { S_3[t, i, j] }" }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_4[t, i, j] }" } ] } } }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_5[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_6[t, i, j] }", child: { schedule: "[_PB_TSTEPS, _PB_N] -> L_3[{ S_6[t, i, j] -> [(-j)] }]" } } ] } } }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_12[t, i]; S_10[t, i, j]; S_7[t, i]; S_9[t, i]; S_13[t, i, j]; S_8[t, i]; S_11[t, i, j] }", child: { schedule: "[_PB_TSTEPS, _PB_N] -> L_4[{ S_12[t, i] -> [(i)]; S_10[t, i, j] -> [(i)]; S_7[t, i] -> [(i)]; S_9[t, i] -> [(i)]; S_13[t, i, j] -> [(i)]; S_8[t, i] -> [(i)]; S_11[t, i, j] -> [(i)] }]", child: { sequence: [ { filter: "[_PB_TSTEPS, _PB_N] -> { S_7[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_8[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_9[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_10[t, i, j]; S_11[t, i, j] }", child: { schedule: "[_PB_TSTEPS, _PB_N] -> L_5[{ S_10[t, i, j] -> [(j)]; S_11[t, i, j] -> [(j)] }]", child: { sequence: [ { filter: "[_PB_TSTEPS, _PB_N] -> { S_10[t, i, j] }" }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_11[t, i, j] }" } ] } } }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_12[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N] -> { S_13[t, i, j] }", child: { schedule: "[_PB_TSTEPS, _PB_N] -> L_6[{ S_13[t, i, j] -> [(-j)] }]" } } ] } } } ] } } }

#domain:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_8[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_5[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_0[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_13[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_9[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_7[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_6[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_3[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_12[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_2[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_1[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_11[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_4[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_10[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N }

#schedule map:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_3[t, i, j] -> [t, 0, i, 3, j, 0]; S_5[t, i] -> [t, 0, i, 4, 0, 0]; S_6[t, i, j] -> [t, 0, i, 5, -j, 0]; S_9[t, i] -> [t, 1, i, 2, 0, 0]; S_0[t, i] -> [t, 0, i, 0, 0, 0]; S_12[t, i] -> [t, 1, i, 4, 0, 0]; S_2[t, i] -> [t, 0, i, 2, 0, 0]; S_8[t, i] -> [t, 1, i, 1, 0, 0]; S_11[t, i, j] -> [t, 1, i, 3, j, 1]; S_4[t, i, j] -> [t, 0, i, 3, j, 1]; S_7[t, i] -> [t, 1, i, 0, 0, 0]; S_13[t, i, j] -> [t, 1, i, 5, -j, 0]; S_1[t, i] -> [t, 0, i, 1, 0, 0]; S_10[t, i, j] -> [t, 1, i, 3, j, 0] }

#isl schedule:
{ domain: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_8[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_5[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_0[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_13[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_9[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_7[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_6[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_3[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_12[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_2[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_1[t, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_11[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_4[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_10[t, i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N }", child: { schedule: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> [{ S_8[t, i] -> [(t)]; S_5[t, i] -> [(t)]; S_0[t, i] -> [(t)]; S_13[t, i, j] -> [(t)]; S_9[t, i] -> [(t)]; S_7[t, i] -> [(t)]; S_6[t, i, j] -> [(t)]; S_3[t, i, j] -> [(t)]; S_12[t, i] -> [(t)]; S_2[t, i] -> [(t)]; S_1[t, i] -> [(t)]; S_11[t, i, j] -> [(t)]; S_4[t, i, j] -> [(t)]; S_10[t, i, j] -> [(t)] }]", permutable: 1, coincident: [ 1 ], child: { schedule: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> [{ S_8[t, i] -> [(i)]; S_5[t, i] -> [(0)]; S_0[t, i] -> [(0)]; S_13[t, i, j] -> [(_PB_N + i)]; S_9[t, i] -> [(i)]; S_7[t, i] -> [(1)]; S_6[t, i, j] -> [(i)]; S_3[t, i, j] -> [(i)]; S_12[t, i] -> [(_PB_N)]; S_2[t, i] -> [(0)]; S_1[t, i] -> [(0)]; S_11[t, i, j] -> [(_PB_N + i)]; S_4[t, i, j] -> [(i)]; S_10[t, i, j] -> [(i)] }, { S_8[t, i] -> [(2 + _PB_N)]; S_5[t, i] -> [(_PB_N + i)]; S_0[t, i] -> [(i)]; S_13[t, i, j] -> [(5_PB_N - j)]; S_9[t, i] -> [(1 + _PB_N + i)]; S_7[t, i] -> [(1 + _PB_N + i)]; S_6[t, i, j] -> [(3_PB_N - j)]; S_3[t, i, j] -> [(1 + _PB_N + j)]; S_12[t, i] -> [(1 + _PB_N + i)]; S_2[t, i] -> [(i)]; S_1[t, i] -> [(i)]; S_11[t, i, j] -> [(3_PB_N + j)]; S_4[t, i, j] -> [(1 + _PB_N + j)]; S_10[t, i, j] -> [(3_PB_N + j)] }]", permutable: 1, coincident: [ 1, 1 ], child: { set: [ { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_10[t, i, j] }" }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_8[t, i]; S_9[t, i]; S_7[t, i]; S_3[t, i, j]; S_4[t, i, j] }", child: { sequence: [ { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_4[t, i, j] }" }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_3[t, i, j] }" }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_7[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_9[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_8[t, i] }" } ] } }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_11[t, i, j] }" }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_1[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_0[t, i]; S_2[t, i] }", child: { sequence: [ { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_0[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_2[t, i] }" } ] } }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_12[t, i] }" }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_6[t, i, j] }" }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_13[t, i, j] }" }, { filter: "[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_5[t, i] }" } ] } } } }

#isl schedule map:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_7[t, i] -> [t, 1, 1 + _PB_N + i, 1, 2]; S_5[t, i] -> [t, 0, _PB_N + i, 8, 0]; S_6[t, i, j] -> [t, i, 3_PB_N - j, 6, 0]; S_12[t, i] -> [t, _PB_N, 1 + _PB_N + i, 5, 0]; S_3[t, i, j] -> [t, i, 1 + _PB_N + j, 1, 1]; S_9[t, i] -> [t, i, 1 + _PB_N + i, 1, 3]; S_8[t, i] -> [t, i, 2 + _PB_N, 1, 4]; S_0[t, i] -> [t, 0, i, 4, 0]; S_11[t, i, j] -> [t, _PB_N + i, 3_PB_N + j, 2, 0]; S_10[t, i, j] -> [t, i, 3_PB_N + j, 0, 0]; S_4[t, i, j] -> [t, i, 1 + _PB_N + j, 1, 0]; S_1[t, i] -> [t, 0, i, 3, 0]; S_13[t, i, j] -> [t, _PB_N + i, 5_PB_N - j, 7, 0]; S_2[t, i] -> [t, 0, i, 4, 1] }

#writes:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_5[t, i] -> v[-1 + _PB_N, i] : _PB_N > 0 and 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_12[t, i] -> u[i, -1 + _PB_N] : _PB_N > 0 and 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_0[t, i] -> v[0, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_10[t, i, j] -> p[i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_3[t, i, j] -> p[i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_11[t, i, j] -> q[i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_13[t, i, j] -> u[i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_2[t, i] -> q[i, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_4[t, i, j] -> q[i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_8[t, i] -> p[i, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_6[t, i, j] -> v[j, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_1[t, i] -> p[i, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_9[t, i] -> q[i, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_7[t, i] -> u[i, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N }

#reads:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_13[t, i, j] -> q[i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_10[t, i, j] -> p[i, -1 + j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_3[t, i, j] -> p[i, -1 + j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_11[t, i, j] -> q[i, -1 + j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_6[t, i, j] -> p[i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_9[t, i] -> u[i, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_11[t, i, j] -> p[i, -1 + j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_13[t, i, j] -> u[i, 1 + j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_4[t, i, j] -> q[i, -1 + j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_6[t, i, j] -> q[i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_6[t, i, j] -> v[1 + j, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_4[t, i, j] -> u[j, 1 + i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_4[t, i, j] -> u[j, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_4[t, i, j] -> u[j, -1 + i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_2[t, i] -> v[0, i] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N; S_11[t, i, j] -> v[1 + i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_11[t, i, j] -> v[i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_11[t, i, j] -> v[-1 + i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_13[t, i, j] -> p[i, j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N; S_4[t, i, j] -> p[i, -1 + j] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N }

#dep_raw:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_9[t, i] -> S_11[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_8[t, i] -> S_3[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j] -> S_10[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_1[t, i] -> S_10[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_10[t, i, j] -> S_11[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_10[t, i, j] -> S_3[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t < t' <= _PB_TSTEPS; S_8[t, i] -> S_10[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_8[t, i] -> S_4[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_1[t, i] -> S_4[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_3[t, i, j] -> S_10[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_13[t, i, j] -> S_13[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_11[t, i, j] -> S_6[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_7[t, i] -> S_9[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_9[t, i] -> S_4[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_3[t, i, j] -> S_6[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_8[t, i] -> S_11[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_3[t, i, j] -> S_11[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_1[t, i] -> S_11[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_10[t, i, j] -> S_6[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j] -> S_4[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t < t' <= _PB_TSTEPS; S_3[t, i, j] -> S_13[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_5[t, i] -> S_11[t', i' = -2 + _PB_N, j = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_2[t, i] -> S_4[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_2[t, i] -> S_11[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_3[t, i, j] -> S_3[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_10[t, i, j] -> S_13[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_4[t, i, j] -> S_13[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_4[t, i, j] -> S_11[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_5[t, i] -> S_6[t', i' = i, j = -2 + _PB_N] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_7[t, i] -> S_4[t', i' = 1, j = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j] -> S_11[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_6[t, i, j] -> S_11[t', i', j' = i] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS and i' >= -1 + j and 0 < i' <= 1 + j and i' <= -2 + _PB_N; S_6[t, i, j] -> S_6[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_3[t, i, j] -> S_4[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_0[t, i] -> S_11[t', i' = 1, j = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_11[t, i, j] -> S_13[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_12[t, i] -> S_13[t', i' = i, j = -2 + _PB_N] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_4[t, i, j] -> S_6[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_12[t, i] -> S_4[t', i' = -2 + _PB_N, j = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_13[t, i, j] -> S_4[t', i', j' = i] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS and i' >= -1 + j and 0 < i' <= 1 + j and i' <= -2 + _PB_N; S_11[t, i, j] -> S_4[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j] -> S_4[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_1[t, i] -> S_3[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_0[t, i] -> S_2[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS }

#dep_waw:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_9[t, i] -> S_2[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_6[t, i, j] -> S_6[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_5[t, i] -> S_5[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_12[t, i] -> S_12[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_0[t, i] -> S_0[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j] -> S_4[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j] -> S_11[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_8[t, i] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_2[t, i] -> S_2[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_7[t, i] -> S_7[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_13[t, i, j] -> S_13[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j] -> S_10[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_3[t, i, j] -> S_10[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_4[t, i, j] -> S_4[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_8[t, i] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j] -> S_11[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_9[t, i] -> S_9[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_2[t, i] -> S_9[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_3[t, i, j] -> S_3[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j] -> S_3[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_1[t, i] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_1[t, i] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS }

#dep_war:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_3[t, i, j = 1] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j] -> S_10[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i = 1, j] -> S_7[t', i' = j] : t > 0 and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_6[t, i, j] -> S_3[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_9[t, i] -> S_7[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j = 1] -> S_2[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j] -> S_3[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j = 1] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i = -2 + _PB_N, j] -> S_12[t', i' = j] : t > 0 and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_3[t, i, j] -> S_10[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_13[t, i, j] -> S_13[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j] -> S_10[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_6[t, i, j] -> S_4[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_2[t, i] -> S_0[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_6[t, i, j] -> S_10[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_11[t, i = 1, j] -> S_0[t', i' = j] : t > 0 and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j] -> S_6[t', i' = j, j'] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS and j' >= -1 + i and 0 < j' <= 1 + i and j' <= -2 + _PB_N; S_4[t, i, j] -> S_3[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_13[t, i, j] -> S_11[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_13[t, i, j = -2 + _PB_N] -> S_12[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j = 1] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j] -> S_10[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_13[t, i, j] -> S_3[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j = 1] -> S_9[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_3[t, i, j] -> S_3[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j] -> S_13[t', i' = j, j'] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS and j' >= -1 + i and 0 < j' <= 1 + i and j' <= -2 + _PB_N; S_4[t, i, j] -> S_11[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_6[t, i, j = -2 + _PB_N] -> S_5[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j = 1] -> S_9[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_13[t, i, j] -> S_10[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j = 1] -> S_2[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j] -> S_11[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j = 1] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_6[t, i, j] -> S_11[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_6[t, i, j] -> S_6[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j = 1] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_11[t, i, j = 1] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j] -> S_3[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j = 1] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j] -> S_4[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_13[t, i, j] -> S_4[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j] -> S_4[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_3[t, i, j = 1] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_11[t, i = -2 + _PB_N, j] -> S_5[t', i' = j] : t > 0 and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS }

#relations:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_4[t, i, j] -> S_4[t', i' = i, j'] : t > 0 and 0 < i <= -2 + _PB_N and j <= -2 + _PB_N and t < t' <= _PB_TSTEPS and j' >= -1 + j and 0 < j' <= j; S_4[t, i, j] -> S_4[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_7[t, i] -> S_9[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_2[t, i] -> S_0[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j] -> S_11[t', i' = i, j'] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS and j' >= -1 + j and 0 < j' <= 1 + j and j' <= -2 + _PB_N; S_4[t, i, j] -> S_3[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_1[t, i] -> S_11[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_10[t, i, j] -> S_4[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t < t' <= _PB_TSTEPS; S_12[t, i] -> S_4[t', i' = -2 + _PB_N, j = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j = 1] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_11[t, i, j = 1] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_1[t, i] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_11[t, i, j] -> S_6[t', i' = j, j'] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS and j' >= -1 + i and 0 < j' <= 1 + i and j' <= -2 + _PB_N; S_11[t, i, j] -> S_6[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_13[t, i, j] -> S_13[t', i' = i, j'] : t > 0 and 0 < i <= -2 + _PB_N and j <= -2 + _PB_N and t' <= _PB_TSTEPS and j' >= -1 + j and 0 < j' < -t + j + t' and j' <= j; S_13[t, i, j] -> S_13[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t < t' <= _PB_TSTEPS; S_5[t, i] -> S_6[t', i' = i, j = -2 + _PB_N] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_8[t, i] -> S_4[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_2[t, i] -> S_11[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_9[t, i] -> S_7[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j] -> S_10[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_6[t, i, j] -> S_4[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j = 1] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j] -> S_11[t', i' = i, j'] : t > 0 and 0 < i <= -2 + _PB_N and j <= -2 + _PB_N and t < t' <= _PB_TSTEPS and j' >= -1 + j and 0 < j' <= j; S_11[t, i, j] -> S_11[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_6[t, i, j] -> S_6[t', i' = i, j'] : t > 0 and 0 < i <= -2 + _PB_N and j <= -2 + _PB_N and t' <= _PB_TSTEPS and j' >= -1 + j and 0 < j' < -t + j + t' and j' <= j; S_6[t, i, j] -> S_6[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i = -2 + _PB_N, j] -> S_5[t', i' = j] : t > 0 and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_5[t, i] -> S_11[t', i' = -2 + _PB_N, j = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_3[t, i, j] -> S_10[t', i' = i, j'] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS and j' >= -1 + j and 0 < j' <= 1 + j and j' <= -2 + _PB_N; S_10[t, i, j] -> S_13[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_1[t, i] -> S_3[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_6[t, i, j] -> S_11[t', i', j' = i] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS and i' >= -1 + j and 0 < i' <= 1 + j and i' <= -2 + _PB_N; S_6[t, i, j] -> S_11[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_8[t, i] -> S_11[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_6[t, i, j] -> S_3[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j] -> S_4[t', i' = i, j'] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS and j' >= -1 + j and 0 < j' <= 1 + j and j' <= -2 + _PB_N; S_11[t, i, j] -> S_10[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_3[t, i, j] -> S_3[t', i' = i, j'] : t > 0 and 0 < i <= -2 + _PB_N and j <= -2 + _PB_N and t < t' <= _PB_TSTEPS and j' >= -1 + j and 0 < j' <= j; S_3[t, i, j] -> S_3[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_11[t, i = 1, j] -> S_0[t', i' = j] : t > 0 and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_6[t, i, j = -2 + _PB_N] -> S_5[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_8[t, i] -> S_3[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_12[t, i] -> S_12[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_3[t, i, j] -> S_4[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_9[t, i] -> S_2[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_3[t, i, j = 1] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_9[t, i] -> S_9[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_9[t, i] -> S_11[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_13[t, i, j] -> S_10[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_3[t, i, j] -> S_6[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_6[t, i, j] -> S_10[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_11[t, i, j = 1] -> S_9[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j = 1] -> S_2[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_2[t, i] -> S_2[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j] -> S_3[t', i' = i, j'] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS and j' >= -1 + j and 0 < j' <= 1 + j and j' <= -2 + _PB_N; S_11[t, i, j = 1] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_8[t, i] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_12[t, i] -> S_13[t', i' = i, j = -2 + _PB_N] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_8[t, i] -> S_10[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_13[t, i, j] -> S_11[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j] -> S_6[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_1[t, i] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j] -> S_10[t', i' = i, j'] : t > 0 and 0 < i <= -2 + _PB_N and j <= -2 + _PB_N and t < t' <= _PB_TSTEPS and j' >= -1 + j and 0 < j' <= j; S_10[t, i, j] -> S_10[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_3[t, i, j] -> S_11[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_4[t, i, j] -> S_13[t', i' = j, j'] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS and j' >= -1 + i and 0 < j' <= 1 + i and j' <= -2 + _PB_N; S_4[t, i, j] -> S_13[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_5[t, i] -> S_5[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i = -2 + _PB_N, j] -> S_12[t', i' = j] : t > 0 and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_1[t, i] -> S_4[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_11[t, i, j] -> S_13[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_7[t, i] -> S_4[t', i' = 1, j = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_11[t, i, j] -> S_3[t', i' = i, j' = -1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 2 <= j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_8[t, i] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_3[t, i, j] -> S_13[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_13[t, i, j] -> S_4[t', i', j' = i] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS and i' >= -1 + j and 0 < i' <= 1 + j and i' <= -2 + _PB_N; S_13[t, i, j] -> S_4[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_0[t, i] -> S_0[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_3[t, i, j = 1] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_1[t, i] -> S_10[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_10[t, i, j] -> S_11[t', i' = i, j' = 1 + j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -3 + _PB_N and t <= t' <= _PB_TSTEPS; S_13[t, i, j = -2 + _PB_N] -> S_12[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_10[t, i, j = 1] -> S_8[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_9[t, i] -> S_4[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_0[t, i] -> S_11[t', i' = 1, j = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_13[t, i, j] -> S_3[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_7[t, i] -> S_7[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_2[t, i] -> S_4[t', i' = i, j = 1] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_0[t, i] -> S_2[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_4[t, i, j = 1] -> S_9[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_4[t, i, j = 1] -> S_2[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i, j] -> S_6[t', i' = i, j' = j] : t > 0 and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_2[t, i] -> S_9[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t <= t' <= _PB_TSTEPS; S_4[t, i, j = 1] -> S_1[t', i' = i] : t > 0 and 0 < i <= -2 + _PB_N and t < t' <= _PB_TSTEPS; S_4[t, i = 1, j] -> S_7[t', i' = j] : t > 0 and 0 < j <= -2 + _PB_N and t <= t' <= _PB_TSTEPS }

#delta:
{ [t, i, j] : t >= 0 and -1 - i <= j <= 1 - i; [t, i = 0] : t >= 0 }

#######################################################################

#######################################################################

#norm schedule map:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_3[t, i, j] -> [t, 0, i, 3, j, 0]; S_5[t, i] -> [t, 0, i, 4, 0, 0]; S_6[t, i, j] -> [t, 0, i, 5, -j, 0]; S_9[t, i] -> [t, 1, i, 2, 0, 0]; S_0[t, i] -> [t, 0, i, 0, 0, 0]; S_12[t, i] -> [t, 1, i, 4, 0, 0]; S_2[t, i] -> [t, 0, i, 2, 0, 0]; S_8[t, i] -> [t, 1, i, 1, 0, 0]; S_11[t, i, j] -> [t, 1, i, 3, j, 1]; S_4[t, i, j] -> [t, 0, i, 3, j, 1]; S_7[t, i] -> [t, 1, i, 0, 0, 0]; S_13[t, i, j] -> [t, 1, i, 5, -j, 0]; S_1[t, i] -> [t, 0, i, 1, 0, 0]; S_10[t, i, j] -> [t, 1, i, 3, j, 0] }

#######################################################################

#######################################################################

#normalized loop (0):

#mapper:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_4[t, i, j] -> S_4[i0 = t, i1 = 0, i2 = i, i3 = 3, i4 = j, i5 = 1]; S_0[t, i] -> S_0[i0 = t, i1 = 0, i2 = i, i3 = 0, i4 = 0, i5 = 0]; S_7[t, i] -> S_7[i0 = t, i1 = 1, i2 = i, i3 = 0, i4 = 0, i5 = 0]; S_9[t, i] -> S_9[i0 = t, i1 = 1, i2 = i, i3 = 2, i4 = 0, i5 = 0]; S_12[t, i] -> S_12[i0 = t, i1 = 1, i2 = i, i3 = 4, i4 = -1 + _PB_N, i5 = 0]; S_3[t, i, j] -> S_3[i0 = t, i1 = 0, i2 = i, i3 = 3, i4 = j, i5 = 0]; S_2[t, i] -> S_2[i0 = t, i1 = 0, i2 = i, i3 = 2, i4 = 0, i5 = 0]; S_1[t, i] -> S_1[i0 = t, i1 = 0, i2 = i, i3 = 1, i4 = 0, i5 = 0]; S_13[t, i, j] -> S_13[i0 = t, i1 = 1, i2 = i, i3 = 5, i4 = -j, i5 = 0]; S_5[t, i] -> S_5[i0 = t, i1 = 0, i2 = i, i3 = 4, i4 = -1 + _PB_N, i5 = 0]; S_6[t, i, j] -> S_6[i0 = t, i1 = 0, i2 = i, i3 = 5, i4 = -j, i5 = 0]; S_10[t, i, j] -> S_10[i0 = t, i1 = 1, i2 = i, i3 = 3, i4 = j, i5 = 0]; S_11[t, i, j] -> S_11[i0 = t, i1 = 1, i2 = i, i3 = 3, i4 = j, i5 = 1]; S_8[t, i] -> S_8[i0 = t, i1 = 1, i2 = i, i3 = 1, i4 = 0, i5 = 0] }

#domain:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_7[i0, i1 = 1, i2, i3 = 0, i4 = 0, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_5[i0, i1 = 0, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_12[i0, i1 = 1, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_0[i0, i1 = 0, i2, i3 = 0, i4 = 0, i5 = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N }

#schedule map:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_5[i0, i1 = 0, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> [i0, 0, i2, 4, 0, 0]; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> [i0, 1, i2, 3, i4, 0]; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> [i0, 0, i2, 5, i4, 0]; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> [i0, 0, i2, 3, i4, 0]; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> [i0, 1, i2, 3, i4, 1]; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> [i0, 0, i2, 3, i4, 1]; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> [i0, 1, i2, 2, 0, 0]; S_12[i0, i1 = 1, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> [i0, 1, i2, 4, 0, 0]; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> [i0, 0, i2, 1, 0, 0]; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> [i0, 1, i2, 5, i4, 0]; S_0[i0, i1 = 0, i2, i3 = 0, i4 = 0, i5 = 0] -> [i0, 0, i2, 0, 0, 0]; S_7[i0, i1 = 1, i2, i3 = 0, i4 = 0, i5 = 0] -> [i0, 1, i2, 0, 0, 0]; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> [i0, 1, i2, 1, 0, 0]; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> [i0, 0, i2, 2, 0, 0] }

#writes:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> p[i2, i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> u[i2, -i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0; S_0[i0, i1 = 0, i2, i3 = 0, i4 = 0, i5 = 0] -> v[0, i2] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> q[i2, i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_7[i0, i1 = 1, i2, i3 = 0, i4 = 0, i5 = 0] -> u[i2, 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_12[i0, i1 = 1, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> u[i2, -1 + _PB_N] : _PB_N > 0 and 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> p[i2, i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> p[i2, 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> p[i2, 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> q[i2, 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> v[-i4, i2] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0; S_5[i0, i1 = 0, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> v[-1 + _PB_N, i2] : _PB_N > 0 and 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> q[i2, 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> q[i2, i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N }

#reads:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> p[i2, -i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> p[i2, -1 + i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> u[i2, 1 - i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> u[i2, 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> q[i2, -1 + i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> u[i4, 1 + i2] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> u[i4, i2] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> u[i4, -1 + i2] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> q[i2, -i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> q[i2, -i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> v[0, i2] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> p[i2, -1 + i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> p[i2, -1 + i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> p[i2, -1 + i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> p[i2, -i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> v[1 + i2, i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> v[i2, i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> v[-1 + i2, i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> v[1 - i4, i2] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> q[i2, -1 + i4] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N }

#dep_raw:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_4[i0', i1' = 0, i2', i3' = 3, i4' = i2, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 < i0' <= _PB_TSTEPS and i2' > 0 and -1 - i4 <= i2' <= 1 - i4 and i2' <= -2 + _PB_N; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = 1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 <= -2 and i0 <= i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_11[i0', i1' = 1, i2', i3' = 3, i4' = i2, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 <= i0' <= _PB_TSTEPS and i2' > 0 and -1 - i4 <= i2' <= 1 - i4 and i2' <= -2 + _PB_N; S_5[i0, i1 = 0, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_11[i0', i1' = 1, i2' = -2 + _PB_N, i3' = 3, i4' = i2, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_7[i0, i1 = 1, i2, i3 = 0, i4 = 0, i5 = 0] -> S_9[i0', i1' = 1, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_0[i0, i1 = 0, i2, i3 = 0, i4 = 0, i5 = 0] -> S_2[i0', i1' = 0, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_7[i0, i1 = 1, i2, i3 = 0, i4 = 0, i5 = 0] -> S_4[i0', i1' = 0, i2' = 1, i3' = 3, i4' = i2, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = 1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 <= -2 and i0 <= i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_0[i0, i1 = 0, i2, i3 = 0, i4 = 0, i5 = 0] -> S_11[i0', i1' = 1, i2' = 1, i3' = 3, i4' = i2, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_12[i0, i1 = 1, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_4[i0', i1' = 0, i2' = -2 + _PB_N, i3' = 3, i4' = i2, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_12[i0, i1 = 1, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = 2 - _PB_N, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_5[i0, i1 = 0, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = 2 - _PB_N, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS }

#dep_waw:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 < i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_7[i0, i1 = 1, i2, i3 = 0, i4 = 0, i5 = 0] -> S_7[i0', i1' = 1, i2' = i2, i3' = 0, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 < i0' <= _PB_TSTEPS; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> S_2[i0', i1' = 0, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_12[i0, i1 = 1, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_12[i0', i1' = 1, i2' = i2, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> S_2[i0', i1' = 0, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_5[i0, i1 = 0, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_5[i0', i1' = 0, i2' = i2, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_0[i0, i1 = 0, i2, i3 = 0, i4 = 0, i5 = 0] -> S_0[i0', i1' = 0, i2' = i2, i3' = 0, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> S_9[i0', i1' = 1, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> S_9[i0', i1' = 1, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS }

#dep_war:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> S_7[i0', i1' = 1, i2' = i2, i3' = 0, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 0] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 1] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 1] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_6[i0', i1' = 0, i2' = i4, i3' = 5, i4', i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS and i4' >= -1 - i2 and 2 - _PB_N <= i4' <= 1 - i2 and i4' < 0; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -i4, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2 = 1, i3 = 3, i4, i5 = 1] -> S_7[i0', i1' = 1, i2' = i4, i3' = 0, i4' = 0, i5' = 0] : i0 > 0 and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4 = 2 - _PB_N, i5 = 0] -> S_5[i0', i1' = 0, i2' = i2, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 <= i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 1] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_13[i0', i1' = 1, i2' = i4, i3' = 5, i4', i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS and i4' >= -1 - i2 and 2 - _PB_N <= i4' <= 1 - i2 and i4' < 0; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = -1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 3 - _PB_N <= i4 < 0 and i0 < i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 0] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 1] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> S_0[i0', i1' = 0, i2' = i2, i3' = 0, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 1] -> S_2[i0', i1' = 0, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 1] -> S_2[i0', i1' = 0, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4 = 2 - _PB_N, i5 = 0] -> S_12[i0', i1' = 1, i2' = i2, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2 = -2 + _PB_N, i3 = 3, i4, i5 = 1] -> S_5[i0', i1' = 0, i2' = i4, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 1] -> S_9[i0', i1' = 1, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 0] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2 = -2 + _PB_N, i3 = 3, i4, i5 = 1] -> S_12[i0', i1' = 1, i2' = i4, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : i0 > 0 and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = -1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 3 - _PB_N <= i4 < 0 and i0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -i4, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2 = 1, i3 = 3, i4, i5 = 1] -> S_0[i0', i1' = 0, i2' = i4, i3' = 0, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 1] -> S_9[i0', i1' = 1, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 0] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS }

#relations:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_11[i0', i1' = 1, i2', i3' = 3, i4' = i2, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 <= i0' <= _PB_TSTEPS and i2' > 0 and -1 - i4 <= i2' <= 1 - i4 and i2' <= -2 + _PB_N; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 <= i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4', i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS and i4' >= -1 + i4 and 0 < i4' <= i4; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4', i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS and i4' >= -1 + i4 and 0 < i4' <= 1 + i4 and i4' <= -2 + _PB_N; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -i4, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> S_9[i0', i1' = 1, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_7[i0, i1 = 1, i2, i3 = 0, i4 = 0, i5 = 0] -> S_4[i0', i1' = 0, i2' = 1, i3' = 3, i4' = i2, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_6[i0', i1' = 0, i2' = i4, i3' = 5, i4', i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS and i4' >= -1 - i2 and 2 - _PB_N <= i4' <= 1 - i2 and i4' < 0; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 1] -> S_2[i0', i1' = 0, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_4[i0', i1' = 0, i2', i3' = 3, i4' = i2, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 < i0' <= _PB_TSTEPS and i2' > 0 and -1 - i4 <= i2' <= 1 - i4 and i2' <= -2 + _PB_N; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 < i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4', i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i4 < 0 and i0 < i0' <= _PB_TSTEPS and i4' >= -1 + i4 and 2 - _PB_N <= i4' <= i4; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = 1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 <= -2 and i0 <= i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_12[i0, i1 = 1, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = 2 - _PB_N, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2 = 1, i3 = 3, i4, i5 = 1] -> S_7[i0', i1' = 1, i2' = i4, i3' = 0, i4' = 0, i5' = 0] : i0 > 0 and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> S_7[i0', i1' = 1, i2' = i2, i3' = 0, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_13[i0', i1' = 1, i2' = i4, i3' = 5, i4', i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS and i4' >= -1 - i2 and 2 - _PB_N <= i4' <= 1 - i2 and i4' < 0; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 1] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2 = -2 + _PB_N, i3 = 3, i4, i5 = 1] -> S_12[i0', i1' = 1, i2' = i4, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : i0 > 0 and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_7[i0, i1 = 1, i2, i3 = 0, i4 = 0, i5 = 0] -> S_7[i0', i1' = 1, i2' = i2, i3' = 0, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_5[i0, i1 = 0, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = 2 - _PB_N, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4 = 2 - _PB_N, i5 = 0] -> S_5[i0', i1' = 0, i2' = i2, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2 = -2 + _PB_N, i3 = 3, i4, i5 = 1] -> S_5[i0', i1' = 0, i2' = i4, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 1] -> S_9[i0', i1' = 1, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2 = 1, i3 = 3, i4, i5 = 1] -> S_0[i0', i1' = 0, i2' = i4, i3' = 0, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4', i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS and i4' >= -1 + i4 and 0 < i4' <= i4; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 0] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_13[i0', i1' = 1, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 1] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4', i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS and i4' >= -1 + i4 and 0 < i4' <= i4; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> S_0[i0', i1' = 0, i2' = i2, i3' = 0, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_13[i0, i1 = 1, i2, i3 = 5, i4 = 2 - _PB_N, i5 = 0] -> S_12[i0', i1' = 1, i2' = i2, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_12[i0, i1 = 1, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_12[i0', i1' = 1, i2' = i2, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = -i4, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4', i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS and i4' >= -1 + i4 and 0 < i4' <= 1 + i4 and i4' <= -2 + _PB_N; S_1[i0, i1 = 0, i2, i3 = 1, i4 = 0, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_9[i0, i1 = 1, i2, i3 = 2, i4 = 0, i5 = 0] -> S_2[i0', i1' = 0, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_5[i0, i1 = 0, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_5[i0', i1' = 0, i2' = i2, i3' = 4, i4' = -1 + _PB_N, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 1] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4', i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS and i4' >= -1 + i4 and 0 < i4' <= i4; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 < 0 and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 1] -> S_2[i0', i1' = 0, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 0] -> S_1[i0', i1' = 0, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_0[i0, i1 = 0, i2, i3 = 0, i4 = 0, i5 = 0] -> S_11[i0', i1' = 1, i2' = 1, i3' = 3, i4' = i2, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = -i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_3[i0', i1' = 0, i2' = i2, i3' = 3, i4', i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 < i0' <= _PB_TSTEPS and i4' >= -1 + i4 and 0 < i4' <= 1 + i4 and i4' <= -2 + _PB_N; S_0[i0, i1 = 0, i2, i3 = 0, i4 = 0, i5 = 0] -> S_2[i0', i1' = 0, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4', i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i4 < 0 and i0 < i0' <= _PB_TSTEPS and i4' >= -1 + i4 and 2 - _PB_N <= i4' <= i4; S_6[i0, i1 = 0, i2, i3 = 5, i4, i5 = 0] -> S_6[i0', i1' = 0, i2' = i2, i3' = 5, i4' = 1 + i4, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 2 - _PB_N <= i4 <= -2 and i0 <= i0' <= _PB_TSTEPS; S_5[i0, i1 = 0, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_11[i0', i1' = 1, i2' = -2 + _PB_N, i3' = 3, i4' = i2, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_7[i0, i1 = 1, i2, i3 = 0, i4 = 0, i5 = 0] -> S_9[i0', i1' = 1, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4, i5 = 1] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4', i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS and i4' >= -1 + i4 and 0 < i4' <= 1 + i4 and i4' <= -2 + _PB_N; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_12[i0, i1 = 1, i2, i3 = 4, i4 = -1 + _PB_N, i5 = 0] -> S_4[i0', i1' = 0, i2' = -2 + _PB_N, i3' = 3, i4' = i2, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_8[i0, i1 = 1, i2, i3 = 1, i4 = 0, i5 = 0] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4, i5 = 1] -> S_10[i0', i1' = 1, i2' = i2, i3' = 3, i4' = -1 + i4, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 2 <= i4 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_11[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 1] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> S_2[i0', i1' = 0, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_2[i0, i1 = 0, i2, i3 = 2, i4 = 0, i5 = 0] -> S_9[i0', i1' = 1, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4, i5 = 0] -> S_4[i0', i1' = 0, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_10[i0, i1 = 1, i2, i3 = 3, i4 = 1, i5 = 0] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 0] -> S_8[i0', i1' = 1, i2' = i2, i3' = 1, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_3[i0, i1 = 0, i2, i3 = 3, i4, i5 = 0] -> S_11[i0', i1' = 1, i2' = i2, i3' = 3, i4' = 1 + i4, i5' = 1] : i0 > 0 and 0 < i2 <= -2 + _PB_N and 0 < i4 <= -3 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_4[i0, i1 = 0, i2, i3 = 3, i4 = 1, i5 = 1] -> S_9[i0', i1' = 1, i2' = i2, i3' = 2, i4' = 0, i5' = 0] : i0 > 0 and 0 < i2 <= -2 + _PB_N and i0 <= i0' <= _PB_TSTEPS; S_0[i0, i1 = 0, i2, i3 = 0, i4 = 0, i5 = 0] -> S_0[i0', i1' = 0, i2' = i2, i3' = 0, i4' = 0, i5' = 0] : 0 < i0 <= _PB_TSTEPS and 0 < i2 <= -2 + _PB_N and i0' > i0 and 0 < i0' <= _PB_TSTEPS }

#delta:
{ [i0, i1, i2 = 0, i3, i4, i5] : i3 >= -2 and i4 >= 4 + i3 and i5 >= i1 and i5 >= -i1 and -i0 < i5 < -i3 and i5 <= 2i0 + i1; [i0, i1, i2 = 0, i3 = 2, i4, i5] : i4 <= 1 and -1 <= i5 <= 1 and ((-1 <= i1 <= 1 and i4 <= -2 and i5 <= 0 and i5 < 2i0 + i1) or (i1 >= -2i0 and i4 >= -i1 and i5 >= i1 and 0 <= i5 <= -i1 + 2i4)); [i0, i1, i2, i3 = -3, i4 = -1 - i2, i5 = -1] : i1 >= -1 and -2i0 < i1 <= 1 and i2 >= 0; [i0, i1, i2, i3 = -2, i4, i5 = 1] : i1 >= -1 and -2i0 < i1 <= 1 and i4 > i2 and i4 >= 2 - i2; [i0, i1, i2 = 0, i3, i4 = 1, i5] : i0 >= 0 and i1 >= -i0 and i5 >= 2 - i3 and -1 - i1 + i3 <= i5 <= 3 - i1 - i3 and i5 <= 1; [i0, i1, i2 = 0, i3, i4, i5 = i4] : i4 >= -1 + i1 and i4 >= i3 and i4 >= -1 and i4 >= -i0 and 3i4 < i1 + i3; [i0, i1, i2 = 0, i3 = 0, i4, i5] : i1 > -2i0 and i4 >= -1 and i5 >= 2i4 and -1 <= i5 <= -i1 and i5 <= i1; [i0, i1 = 0, i2 = 0, i3, i4, i5] : i0 >= 0 and i3 <= 2 and i4 <= -4 + i3 and -i3 < i5 <= 0; [i0, i1, i2, i3 = 2, i4, i5 = -1] : i1 >= -1 and -2i0 < i1 <= 1 and i4 <= -2 - i2 and i4 < i2; [i0, i1, i2 = 0, i3, i4 = -1, i5] : i1 >= 0 and -2i0 < i1 <= 1 and i3 >= -2 and -1 <= i5 <= -2 - i3; [i0, i1, i2 = 0, i3 = -2, i4, i5] : i4 >= 2 and 0 <= i5 <= 1 - i1 and i5 <= 1 + i1 and i5 < 2i0 + i1; [i0, i1, i2, i3 = 3, i4 = 1 - i2, i5 = 1] : i1 >= -1 and -2i0 < i1 <= 1 and i2 <= 0; [i0, i1, i2, i3 = -1, i4 = -1 - i2, i5 = 1] : i1 >= -1 and -2i0 < i1 <= 1 and i2 >= 0; [i0, i1, i2 = 0, i3 = 0, i4 = 1, i5] : i0 >= 0 and i1 >= -i0 and i5 >= -1 + 2i1 and i5 >= 0 and -1 - 2i1 <= i5 <= 1; [i0, i1, i2 = 0, i3 = -2, i4 = i1, i5] : i0 > 0 and i1 >= -1 and i1 <= i5 <= 0; [i0, i1, i2 = 0, i3 = 0, i4, i5 = 0] : (i1 >= 0 and -2i0 < i1 <= 1 and i4 >= -1 and 2i4 <= 1 + i1) or (i0 > 0 and -1 <= i1 <= 0 and -1 <= i4 <= -i1) or (i4 >= -1 + i1 and i4 >= -1 - i1 and -2i0 - i1 < i4 <= 1 - i1 and i4 <= 1 + i1); [i0, i1, i2, i3 = 1, i4 = 1 - i2, i5 = -1] : i1 >= -1 and -2i0 < i1 <= 1 and i2 <= 0 }

#######################################################################

#######################################################################

#normalized loop (0):

#loop tile start

#dim info analyze start

#dim info analyze stop

#delta analyze start

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -2, i4 = 3, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -2, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -1, i4 = 4, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -1, i4 = 3, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = 3, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = 3, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = 2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = -2, i4 = 3, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = -2, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = -2, i4 = 3, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = -2, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -2, i4 = 3, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -2, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = 3, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = -2, i4 = 3, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = -2, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = -2, i4 = 3, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = -2, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -1, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = -1, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 2, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 2, i4 = -3, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 2, i4 = -3, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 2, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 2, i4 = -3, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 2, i4 = -3, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 1, i4 = -3, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 1, i4 = -4, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 2, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 2, i4 = -3, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 2, i4 = -3, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 2, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 2, i4 = -3, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 2, i4 = -3, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = -3, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = -3, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = -3, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = -4, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 2, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 2, i4 = -3, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 2, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 2, i4 = -3, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 2, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 2, i4 = -3, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 2, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 2, i4 = -3, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -2, i4 = 3, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -2, i4 = 2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = 3, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = 3, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = 2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = -2, i4 = 3, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = -2, i4 = 2, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = -2, i4 = 3, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = -2, i4 = 2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 1, i4 = 1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = -1, i3 = 1, i4 = 2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 1, i4 = 1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = -1, i3 = 1, i4 = 2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 1, i4 = 1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = -1, i3 = 1, i4 = 2, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 1, i4 = 1, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = -1, i3 = 1, i4 = 2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 2, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 1, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 2, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 1, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 1, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 2, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 1, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 0, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 0, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 0, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -1, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -2, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -2, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -1, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = -1, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = -2, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = -2, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 2, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 2, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 2, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 2, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 2, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 2, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 2, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 3, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = -1, i3 = 3, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 3, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = -1, i3 = 3, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 3, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = -1, i3 = 3, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 3, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = -1, i3 = 3, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 1, i3 = -1, i4 = -2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -1, i4 = -1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 1, i3 = -1, i4 = -2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -1, i4 = -1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 1, i3 = -1, i4 = -2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = -1, i4 = -1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 1, i3 = -1, i4 = -2, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = -1, i4 = -1, i5 = 1] }

#distance vector set : { [i0 = 2, i1 = 0, i2 = 0, i3 = -2, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 2, i1 = -1, i2 = 0, i3 = -2, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 2, i1 = -1, i2 = 0, i3 = -2, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -2, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = -2, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = -2, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 1, i3 = -3, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -3, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 1, i3 = -3, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -3, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 1, i3 = -3, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = -3, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 1, i3 = -3, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = -3, i4 = -1, i5 = -1] }

#distance vector set : { [i0 = 2, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 2, i1 = 0, i2 = 0, i3 = 0, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 2, i1 = -1, i2 = 0, i3 = 0, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 2, i1 = -1, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 2, i1 = -1, i2 = 0, i3 = 0, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 0, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 0, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 0, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 0, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 0, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 0, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = -1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 0, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = -1, i2 = 0, i3 = 0, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 0, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 1, i5 = 0] }

#delta:
{ [i0, i1, i2 = 0, i3, i4, i5] : (i3 >= -2 and i4 >= 4 + i3 and i5 >= i1 and i5 >= -i1 and -i0 < i5 < -i3 and i5 <= 2i0 + i1) or (i0 >= 0 and i3 > i1 and -i1 < i3 <= 2 and i4 <= -4 + i3 and -i3 < i5 <= 0 and i5 <= 2i0 + 2i1); [i0, i1, i2, i3 = -3, i4 = -1 - i2, i5 = -1] : i1 >= -1 and -2i0 < i1 <= 1 and i2 >= 0; [i0, i1, i2 = 0, i3 = 2, i4, i5] : i1 >= -2i0 and -i1 <= i4 <= 1 and i5 >= i1 and 0 <= i5 <= -i1 + 2i4 and i5 <= 1; [i0, i1, i2, i3 = -2, i4, i5 = 1] : i1 >= -1 and -2i0 < i1 <= 1 and i4 > i2 and i4 >= 2 - i2; [i0, i1, i2 = 0, i3, i4 = 1, i5] : i0 >= 0 and i1 >= -i0 and i5 >= 2 - i3 and -1 - i1 + i3 <= i5 <= 3 - i1 - i3 and i5 <= 1; [i0, i1, i2 = 0, i3, i4, i5 = i4] : i4 >= -1 + i1 and i4 >= i3 and i4 >= -1 and i4 >= -i0 and 3i4 < i1 + i3; [i0, i1, i2 = 0, i3 = 0, i4, i5] : i1 > -2i0 and i4 >= -1 and i5 >= 2i4 and -1 <= i5 <= -i1 and i5 <= i1; [i0, i1, i2, i3 = 2, i4, i5 = -1] : i1 >= -1 and -2i0 < i1 <= 1 and i4 <= -2 - i2 and i4 < i2; [i0, i1, i2 = 0, i3, i4 = -1, i5] : i1 >= 0 and -2i0 < i1 <= 1 and i3 >= -2 and -1 <= i5 <= -2 - i3; [i0, i1, i2 = 0, i3 = -2, i4, i5] : i4 >= 2 and 0 <= i5 <= 1 - i1 and i5 <= 1 + i1 and i5 < 2i0 + i1; [i0, i1, i2, i3 = 3, i4 = 1 - i2, i5 = 1] : i1 >= -1 and -2i0 < i1 <= 1 and i2 <= 0; [i0, i1, i2, i3 = -1, i4 = -1 - i2, i5 = 1] : i1 >= -1 and -2i0 < i1 <= 1 and i2 >= 0; [i0, i1, i2 = 0, i3 = 0, i4 = 1, i5] : i0 >= 0 and i1 >= -i0 and i5 >= -1 + 2i1 and i5 >= 0 and -1 - 2i1 <= i5 <= 1; [i0, i1, i2 = 0, i3 = -2, i4 = i1, i5] : i0 > 0 and i1 >= -1 and i1 <= i5 <= 0; [i0, i1, i2 = 0, i3 = 0, i4, i5 = 0] : (i0 > 0 and -1 <= i1 <= 0 and -1 <= i4 <= -i1) or (i1 >= 0 and -2i0 < i1 <= 1 and i4 >= -1 and 2i4 <= 1 + i1) or (i4 >= -1 + i1 and i4 >= -1 - i1 and -2i0 - i1 < i4 <= 1 - i1 and i4 <= 1 + i1); [i0, i1, i2, i3 = 1, i4 = 1 - i2, i5 = -1] : i1 >= -1 and -2i0 < i1 <= 1 and i2 <= 0 }

#dim [i0]: is parameter, is positive

#dim [i1]: is order

#dim [i2]: is parameter, is negative, is positive

#dim [i3]: is order

#dim [i4]: is parameter, is negative, is positive

#dim [i5]: is order

#delta analyze stop

#create tile equations start

#tile equations: {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a3 <= 0  and a3 >= 0  and a5 <= 0  and a5 >= 0  and ( 1 = 0  or a1 != 0  or a3 != 0  or a5 != 0  )  and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 4*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 }

#parallel free equation: {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a3 <= 0  and a3 >= 0  and a5 <= 0  and a5 >= 0  and ( 1 = 0  or a1 != 0  or a3 != 0  or a5 != 0  )  and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 4*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 }

#create tile equations stop

#create hyperplanes start

#hyperplane for dim parallel free: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a1 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a3 <= 0  and a3 >= 0  and a5 <= 0  and a5 >= 0  and ( 1 = 0  or a1 != 0  or a3 != 0  or a5 != 0  )  and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 4*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#hyperplane for dim parallel free: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a3 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a3 <= 0  and a3 >= 0  and a5 <= 0  and a5 >= 0  and ( 1 = 0  or a1 != 0  or a3 != 0  or a5 != 0  )  and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 4*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#hyperplane for dim parallel free: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a5 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a3 <= 0  and a3 >= 0  and a5 <= 0  and a5 >= 0  and ( 1 = 0  or a1 != 0  or a3 != 0  or a5 != 0  )  and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + -1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 4*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 = 0 and 1*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#hyperplane for dim: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a1 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a3 <= 0  and a3 >= 0  and a5 <= 0  and a5 >= 0  and ( 1 = 0  or a1 != 0  or a3 != 0  or a5 != 0  )  and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 4*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 } )

#result: { [d0 = 0, b0 = 1, c0 = -6, a1 = 1, a2 = 0, a3 = 0, a4 = 0, a5 = 0, a6 = 0] }

#hyperplane: { [a1 = 1, a2 = 0, a3 = 0, a4 = 0, a5 = 0, a6 = 0] }

#hyperplane check: first hyperplane 

#result: true

#hyperplane for dim: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a3 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a3 <= 0  and a3 >= 0  and a5 <= 0  and a5 >= 0  and ( 1 = 0  or a1 != 0  or a3 != 0  or a5 != 0  )  and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 4*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#hyperplane for dim: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a5 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a3 <= 0  and a3 >= 0  and a5 <= 0  and a5 >= 0  and ( 1 = 0  or a1 != 0  or a3 != 0  or a5 != 0  )  and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + -1*a3 + 3*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 3*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + -1*a2 + 1*a3 + -1*a4 + -2*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 4*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 3*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + 2*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 >= 0 and 1*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + -1*a3 + 1*a4 + 2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 1*a4 + 1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 0*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -1*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 2*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -2*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + -3*a4 + -1*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 1*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 1*a1 + -1*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#create hyperplanes stop

#create spaces start

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { [i0, i1, i2, i3, i4, i5] -> [  h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : exists bh0 : 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 } 

#spaces mapper: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { [i0, i1, i2, i3, i4, i5] -> [h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0 }

#create spaces stop

#create tile scop start

#tile scop mapper: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_6[i0, i1, i2, i3, i4, i5] -> S_6[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_13[i0, i1, i2, i3, i4, i5] -> S_13[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_9[i0, i1, i2, i3, i4, i5] -> S_9[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_11[i0, i1, i2, i3, i4, i5] -> S_11[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_8[i0, i1, i2, i3, i4, i5] -> S_8[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_4[i0, i1, i2, i3, i4, i5] -> S_4[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_7[i0, i1, i2, i3, i4, i5] -> S_7[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_2[i0, i1, i2, i3, i4, i5] -> S_2[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_10[i0, i1, i2, i3, i4, i5] -> S_10[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_12[i0, i1, i2, i3, i4, i5] -> S_12[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_1[i0, i1, i2, i3, i4, i5] -> S_1[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_3[i0, i1, i2, i3, i4, i5] -> S_3[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_5[i0, i1, i2, i3, i4, i5] -> S_5[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0; S_0[i0, i1, i2, i3, i4, i5] -> S_0[h0, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0 }

#tile scop delta: { [h0, ii0, ii1, ii2 = 0, ii3, ii4, ii5] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ((-ii0 <= ii1 <= 0 and -1 - ii1 + ii3 <= ii4 <= 1 and ii4 <= ii3 and 2ii4 >= ii3 and ii5 > ii1 - ii3 + ii4 and -1 - ii1 + ii4 <= ii5 <= ii4) or (ii3 < -ii1 and ii3 < ii1 and ii3 <= -2 + ii0 and ii4 >= 4 + ii3 and ii5 <= ii0 and -1 - ii1 - ii3 <= 2ii5 <= 1 - ii1) or (ii0 > 0 and ii1 <= 0 and ii3 >= -2 and -1 <= ii4 <= -2 + ii1 - ii3 and ii5 < -ii3 + ii4 and ii5 <= 0 and 2ii5 >= -3 - ii1 - ii3 + ii4) or (ii0 >= 0 and ii1 >= -ii0 and ii3 > ii1 and -ii1 < ii3 <= 2 and ii4 <= -4 + ii3 and -ii3 < ii5 <= 0)); [h0, ii0, ii1 = -1, ii2 = 0, ii3 = 2, ii4 = 1, ii5] : ii0 >= -15 + 16h0 and 0 < ii0 <= 15 + 16h0 and 0 <= ii5 <= 1; [h0, ii0, ii1, ii2, ii3 = 1, ii4 = 1 - ii2, ii5 = -1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii2 <= 0; [h0, ii0, ii1, ii2, ii3 = -3, ii4 = -1 - ii2, ii5 = -1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii2 >= 0; [h0, ii0, ii1, ii2 = 0, ii3 = 2, ii4, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii1 >= 0 and ii1 <= ii4 <= 1 and ii5 >= 0 and 2ii5 <= 1 + ii1; [h0, ii0, ii1, ii2, ii3 = -2, ii4, ii5 = 1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii4 > ii2 and ii4 >= 2 - ii2; [h0, ii0, ii1, ii2 = 0, ii3, ii4, ii5 = ii3] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= 0 and ii4 >= -1 + 2ii1 and ii4 >= -1 + 2ii3 and -2ii0 < ii4 <= ii3; [h0, ii0, ii1, ii2 = 0, ii3 = 0, ii4, ii5] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 > -2ii0 and ii4 >= -1 and ii5 >= 2ii4 and -1 <= ii5 <= -ii1 and ii5 <= ii1; [h0, ii0, ii1, ii2, ii3 = 2, ii4, ii5 = -1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii4 <= -2 - ii2 and ii4 < ii2; [h0, ii0, ii1, ii2 = 0, ii3, ii4 = -1, ii5] : -15 + 16h0 <= ii0 <= 15 + 16h0 and -2ii0 < ii1 <= 1 and ii3 >= -2 and -1 <= ii5 <= -2 - ii3 and 2ii5 < ii1; [h0, ii0, ii1, ii2 = 0, ii3 = -2, ii4, ii5] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii4 >= 2 and ii5 >= ii1 and ii5 >= 0 and -ii0 < ii5 <= 1 and ii5 <= 1 + ii1 and 2ii5 <= 1 + 2ii0 + ii1; [h0, ii0, ii1, ii2, ii3 = 3, ii4 = 1 - ii2, ii5 = 1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii2 <= 0; [h0, ii0, ii1, ii2, ii3 = -1, ii4 = -1 - ii2, ii5 = 1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii2 >= 0; [h0, ii0, ii1, ii2 = 0, ii3 = 0, ii4 = 1, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii1 >= -ii0 and ii5 >= -1 + 2ii1 and ii5 >= 0 and -1 - 2ii1 <= ii5 <= 1; [h0, ii0, ii1, ii2 = 0, ii3 = 0, ii4, ii5 = 0] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii4 >= -1 and ((ii1 >= -1 and -3ii0 < ii1 <= 1 and ii4 <= 1) or (0 <= ii4 <= 1 - ii1 and ii4 <= 1 + ii1 and 2ii4 > -2ii0 - ii1)) }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3, ii4, ii5] : -15 + 16h0 <= ii0 <= 15 + 16h0 and -ii0 <= ii1 <= 0 and -1 - ii1 + ii3 <= ii4 <= 1 and ii4 <= ii3 and 2ii4 >= ii3 and ii5 > ii1 - ii3 + ii4 and -1 - ii1 + ii4 <= ii5 <= ii4 }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3 = 0, ii4, ii5] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 > -2ii0 and ii4 >= -1 and ii5 >= 2ii4 and -1 <= ii5 <= -ii1 and ii5 <= ii1 }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3, ii4, ii5] : ii0 >= -15 + 16h0 and 0 < ii0 <= 15 + 16h0 and ii1 <= 0 and ii3 >= -2 and -1 <= ii4 <= -2 + ii1 - ii3 and ii5 < -ii3 + ii4 and ii5 <= 0 and 2ii5 >= -3 - ii1 - ii3 + ii4 }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3 = 0, ii4 = 1, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii1 >= -ii0 and ii5 >= -1 + 2ii1 and ii5 >= 0 and -1 - 2ii1 <= ii5 <= 1 }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3 = 0, ii4, ii5 = 0] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -3ii0 < ii1 <= 1 and -1 <= ii4 <= 1 }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3 = 2, ii4, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii1 >= 0 and ii1 <= ii4 <= 1 and ii5 >= 0 and 2ii5 <= 1 + ii1 }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3, ii4 = -1, ii5] : -15 + 16h0 <= ii0 <= 15 + 16h0 and -2ii0 < ii1 <= 1 and ii3 >= -2 and -1 <= ii5 <= -2 - ii3 and 2ii5 < ii1 }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3, ii4, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii1 >= -ii0 and ii3 > ii1 and -ii1 < ii3 <= 2 and ii4 <= -4 + ii3 and -ii3 < ii5 <= 0 }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3 = -2, ii4, ii5] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii4 >= 2 and ii5 >= ii1 and ii5 >= 0 and -ii0 < ii5 <= 1 and ii5 <= 1 + ii1 and 2ii5 <= 1 + 2ii0 + ii1 }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3, ii4, ii5] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii3 < -ii1 and ii3 < ii1 and ii3 <= -2 + ii0 and ii4 >= 4 + ii3 and ii5 <= ii0 and -1 - ii1 - ii3 <= 2ii5 <= 1 - ii1 }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3, ii4, ii5 = ii3] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= 0 and ii4 >= -1 + 2ii1 and ii4 >= -1 + 2ii3 and -2ii0 < ii4 <= ii3 }

#tile scop delta part: { [h0, ii0, ii1, ii2, ii3 = -2, ii4, ii5 = 1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii4 > ii2 and ii4 >= 2 - ii2 }

#tile scop delta part: { [h0, ii0, ii1, ii2, ii3 = 2, ii4, ii5 = -1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii4 <= -2 - ii2 and ii4 < ii2 }

#tile scop delta part: { [h0, ii0, ii1, ii2, ii3 = -3, ii4 = -1 - ii2, ii5 = -1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii2 >= 0 }

#tile scop delta part: { [h0, ii0, ii1, ii2 = 0, ii3 = 0, ii4, ii5 = 0] : -15 + 16h0 <= ii0 <= 15 + 16h0 and 0 <= ii4 <= 1 - ii1 and ii4 <= 1 + ii1 and 2ii4 > -2ii0 - ii1 }

#tile scop delta part: { [h0, ii0, ii1, ii2, ii3 = 3, ii4 = 1 - ii2, ii5 = 1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii2 <= 0 }

#tile scop delta part: { [h0, ii0, ii1, ii2, ii3 = -1, ii4 = -1 - ii2, ii5 = 1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii2 >= 0 }

#tile scop delta part: { [h0, ii0, ii1 = -1, ii2 = 0, ii3 = 2, ii4 = 1, ii5] : ii0 >= -15 + 16h0 and 0 < ii0 <= 15 + 16h0 and 0 <= ii5 <= 1 }

#tile scop delta part: { [h0, ii0, ii1, ii2, ii3 = 1, ii4 = 1 - ii2, ii5 = -1] : -15 + 16h0 <= ii0 <= 15 + 16h0 and ii1 >= -1 and -2ii0 < ii1 <= 1 and ii2 <= 0 }

#tile delta: { [h0] : h0 > 0 }

#create tile scop stop

#tile delta analyze start

#tile relatiions distance vector set: { [h0 = 2] }

#tile relatiions distance vector set: { [h0 = 1] }

#tile delta analyze stop

#create wafefront equations start

#wafefront equations: {[d0, b0, c0, a1] : exists b1 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and b0 > 0 and b0 = b1 and 2*a1 > 0 and 1*a1 > 0 }

#create wafefront equations stop

#calculate wafefront hyperplane start

#wafefront hyperplane: lexmin( {[d0 = 0, b0, c0, a1] : exists c1 : ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and c0 = c1 and a1 != 0} * {[d0, b0, c0, a1] : exists b1 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and b0 > 0 and b0 = b1 and 2*a1 > 0 and 1*a1 > 0 } )

#result: { [d0 = 0, b0 = 1, c0 = -1, a1 = 1] }

#wafefront hyperplane: { [a1 = 1] }

#calculate wafefront hyperplane stop

#######################################################################

#continue search for hyperplanes

#######################################################################

#dim info analyze start

#dim info analyze stop

#delta analyze start

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = -3, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = -3, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = -3, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = -4, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = 1, i5 = 1] }

#delta:
{ [i0 = 0, i1 = 0, i2 = 0, i3, i4, i5] : i3 <= 2 and -i3 < i5 <= 1 and ((i4 <= -4 + i3 and i5 <= 0) or (i4 <= 1 and 2 - i3 <= i5 <= 2i4)); [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 1, i5] : 0 <= i5 <= 1 }

#dim [i0]: is wavefront order

#dim [i1]: is wavefront order

#dim [i2]: is bounded

#dim [i3]: is order

#dim [i4]: is parameter, is negative

#dim [i5]: is order

#delta analyze stop

#create tile equations start

#tile equations: {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 = 0  and a2 = 0  and a5 <= 0  and ( 1 = 0  or a3 != 0  or a5 != 0  )  and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 }

#parallel free equation: {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 = 0  and a2 = 0  and a5 <= 0  and ( 1 = 0  or a3 != 0  or a5 != 0  )  and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 }

#create tile equations stop

#create hyperplanes start

#hyperplane for dim parallel free: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a3 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 = 0  and a2 = 0  and a5 <= 0  and ( 1 = 0  or a3 != 0  or a5 != 0  )  and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 = 0 } )

#result: { [d0 = 0, b0 = 1, c0 = -6, a1 = 0, a2 = 0, a3 = 1, a4 = 0, a5 = 0, a6 = 0] }

#hyperplane: { [a1 = 0, a2 = 0, a3 = 1, a4 = 0, a5 = 0, a6 = 0] }

#hyperplane check: first hyperplane 

#result: true

#hyperplane for dim: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a3 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 = 0  and a2 = 0  and a5 <= 0  and ( 1 = 0  or a3 != 0  or a5 != 0  )  and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 } )

#result: { [d0 = 0, b0 = 1, c0 = -6, a1 = 0, a2 = 0, a3 = 1, a4 = 0, a5 = 0, a6 = 0] }

#hyperplane: { [a1 = 0, a2 = 0, a3 = 1, a4 = 0, a5 = 0, a6 = 0] }

#hyperplane check: { : exists c1, c2 : ( c1!=0 or c2!=0 ) and c2*0 = c1*0 and c2*0 = c1*0 and c2*1 = c1*1 and c2*0 = c1*0 and c2*0 = c1*0 and c2*0 = c1*0 } = {}

#result: false

#hyperplane for dim: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a5 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 = 0  and a2 = 0  and a5 <= 0  and ( 1 = 0  or a3 != 0  or a5 != 0  )  and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -3*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -4*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + -3*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 1*a5 + 1*a6 >= 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#create hyperplanes stop

#create spaces start

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { [i0, i1, i2, i3, i4, i5] -> [  ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : exists bh0 : 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 } 

#spaces mapper: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { [i0, i1, i2, i3, i4, i5] -> [ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2 }

#create spaces stop

#create tile scop start

#tile scop mapper: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_6[i0, i1, i2, i3, i4, i5] -> S_6[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_13[i0, i1, i2, i3, i4, i5] -> S_13[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_9[i0, i1, i2, i3, i4, i5] -> S_9[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_11[i0, i1, i2, i3, i4, i5] -> S_11[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_8[i0, i1, i2, i3, i4, i5] -> S_8[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_4[i0, i1, i2, i3, i4, i5] -> S_4[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_7[i0, i1, i2, i3, i4, i5] -> S_7[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_2[i0, i1, i2, i3, i4, i5] -> S_2[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_10[i0, i1, i2, i3, i4, i5] -> S_10[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_12[i0, i1, i2, i3, i4, i5] -> S_12[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_1[i0, i1, i2, i3, i4, i5] -> S_1[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_3[i0, i1, i2, i3, i4, i5] -> S_3[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_5[i0, i1, i2, i3, i4, i5] -> S_5[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2; S_0[i0, i1, i2, i3, i4, i5] -> S_0[ii0 = i0, ii1 = i1, h0, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i2 <= 16h0 <= i2 }

#tile scop delta: { [ii0, ii1, h0, ii2, ii3 = -2, ii4, ii5 = 1] : ii1 >= -1 and -2ii0 < ii1 <= 1 and -15 + 16h0 <= ii2 <= 15 + 16h0 and ii4 > ii2 and ii4 >= 2 - ii2; [ii0, ii1, h0 = 0, ii2 = 0, ii3, ii4, ii5] : (-ii0 <= ii1 <= 0 and -1 - ii1 + ii3 <= ii4 <= 1 and ii4 <= ii3 and 2ii4 >= ii3 and ii5 > ii1 - ii3 + ii4 and -1 - ii1 + ii4 <= ii5 <= ii4) or (ii3 < -ii1 and ii3 < ii1 and ii3 <= -2 + ii0 and ii4 >= 4 + ii3 and ii5 <= ii0 and -1 - ii1 - ii3 <= 2ii5 <= 1 - ii1) or (ii0 > 0 and ii1 <= 0 and ii3 >= -2 and -1 <= ii4 <= -2 + ii1 - ii3 and ii5 < -ii3 + ii4 and ii5 <= 0 and 2ii5 >= -3 - ii1 - ii3 + ii4) or (ii0 >= 0 and ii1 >= -ii0 and ii3 > ii1 and -ii1 < ii3 <= 2 and ii4 <= -4 + ii3 and -ii3 < ii5 <= 0); [ii0, ii1, h0 = 0, ii2 = 0, ii3 = 0, ii4 = 1, ii5] : ii0 >= 0 and ii1 >= -ii0 and ii5 >= -1 + 2ii1 and ii5 >= 0 and -1 - 2ii1 <= ii5 <= 1; [ii0, ii1, h0 = 0, ii2 = 0, ii3 = 0, ii4, ii5 = 0] : ii4 >= -1 and ((ii1 >= -1 and -3ii0 < ii1 <= 1 and ii4 <= 1) or (0 <= ii4 <= 1 - ii1 and ii4 <= 1 + ii1 and 2ii4 > -2ii0 - ii1)); [ii0, ii1 = -1, h0 = 0, ii2 = 0, ii3 = 2, ii4 = 1, ii5] : ii0 > 0 and 0 <= ii5 <= 1; [ii0, ii1, h0, ii2, ii3 = 2, ii4, ii5 = -1] : ii1 >= -1 and -2ii0 < ii1 <= 1 and -15 + 16h0 <= ii2 <= 15 + 16h0 and ii4 <= -2 - ii2 and ii4 < ii2; [ii0, ii1, h0 = 0, ii2 = 0, ii3 = 2, ii4, ii5] : ii0 >= 0 and ii1 >= 0 and ii1 <= ii4 <= 1 and ii5 >= 0 and 2ii5 <= 1 + ii1; [ii0, ii1, h0, ii2, ii3 = 3, ii4 = 1 - ii2, ii5 = 1] : ii1 >= -1 and -2ii0 < ii1 <= 1 and -14 + 16h0 <= ii2 <= 0 and ii2 <= 1 + 16h0; [ii0, ii1, h0, ii2, ii3 = -1, ii4 = -1 - ii2, ii5 = 1] : ii1 >= -1 and -2ii0 < ii1 <= 1 and ii2 >= -15 + 16h0 and 0 <= ii2 <= 15 + 16h0; [ii0, ii1, h0 = 0, ii2 = 0, ii3, ii4, ii5 = ii3] : ii1 >= 0 and ii4 >= -1 + 2ii1 and ii4 >= -1 + 2ii3 and -2ii0 < ii4 <= ii3; [ii0, ii1, h0 = 0, ii2 = 0, ii3 = 0, ii4, ii5] : ii1 > -2ii0 and ii4 >= -1 and ii5 >= 2ii4 and -1 <= ii5 <= -ii1 and ii5 <= ii1; [ii0, ii1, h0, ii2, ii3 = 1, ii4 = 1 - ii2, ii5 = -1] : ii1 >= -1 and -2ii0 < ii1 <= 1 and -15 + 16h0 <= ii2 <= 0 and ii2 <= 15 + 16h0; [ii0, ii1, h0, ii2, ii3 = -3, ii4 = -1 - ii2, ii5 = -1] : ii1 >= -1 and -2ii0 < ii1 <= 1 and ii2 >= -1 + 16h0 and 0 <= ii2 <= 14 + 16h0; [ii0, ii1, h0 = 0, ii2 = 0, ii3, ii4 = -1, ii5] : -2ii0 < ii1 <= 1 and ii3 >= -2 and -1 <= ii5 <= -2 - ii3 and 2ii5 < ii1; [ii0, ii1, h0 = 0, ii2 = 0, ii3 = -2, ii4, ii5] : ii4 >= 2 and ii5 >= ii1 and ii5 >= 0 and -ii0 < ii5 <= 1 and ii5 <= 1 + ii1 and 2ii5 <= 1 + 2ii0 + ii1 }

#tile scop delta part: { [ii0 = 0, ii1 = 0, h0 = 0, ii2 = 0, ii3, ii4, ii5] : -1 + ii3 <= ii4 <= 1 and ii4 <= ii3 and 2ii4 >= ii3 and ii5 >= -1 + ii4 and -ii3 + ii4 < ii5 <= ii4 }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0 = 0, ii1 = 0, h0 = 0, ii2 = 0, ii3 = 0, ii4 = 1, ii5] : 0 <= ii5 <= 1 }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0 = 0, ii1 = 0, h0 = 0, ii2 = 0, ii3 = 2, ii4, ii5 = 0] : 0 <= ii4 <= 1 }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0 = 0, ii1 = 0, h0 = 0, ii2 = 0, ii3, ii4, ii5] : 0 < ii3 <= 2 and ii4 <= -4 + ii3 and -ii3 < ii5 <= 0 }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0 = 0, ii1 = 0, h0 = 0, ii2 = 0, ii3, ii4, ii5 = ii3] : ii4 >= -1 + 2ii3 and 0 < ii4 <= ii3 }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0 = 0, ii1 = 0, h0 = 0, ii2 = 0, ii3 = 0, ii4 = 1, ii5 = 0] }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile scop delta part: { [ii0, ii1, h0, ii2, ii3, ii4, ii5] : false }

#tile delta: {  }

#create tile scop stop

#tile delta analyze start

#tile delta analyze stop

#create wafefront equations start

#wafefront equations: {[d0, b0, c0, a1] : exists b1 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and b0 > 0 and b0 = b1 }

#create wafefront equations stop

#calculate wafefront hyperplane start

#wafefront hyperplane: lexmin( {[d0 = 0, b0, c0, a1] : exists c1 : ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and c0 = c1 and a1 != 0} * {[d0, b0, c0, a1] : exists b1 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and b0 > 0 and b0 = b1 } )

#result: { [d0 = 0, b0 = 1, c0 = -1, a1 = 1] }

#wafefront hyperplane: { [a1 = 1] }

#calculate wafefront hyperplane stop

#create parallel free schedule start

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_5[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_10[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_6[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_3[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_11[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_4[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_9[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_12[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_1[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_13[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_0[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_7[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_8[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#part: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_2[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0, h0, 0, 0, 0, 0, 0, tw0, i2, i3, i4, i5] : exists  bw0, bh0 : 1 = 1 and 0 * i0 + 0 * i1 + 1 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1  and bw0 = 1 * bh0 and tw0 = 0 and w0 = 0 } 

#parallel free schedule: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_4[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_9[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_3[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_12[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_6[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_13[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_0[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_8[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_5[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_11[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_10[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_7[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_2[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2; S_1[i0, i1, i2, i3, i4, i5] -> [0, i0, i1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i2, i3, i4, i5] : -15 + i2 <= 16h0 <= i2 }

#create parallel free schedule stop

#create code start

#wafefront code: [_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_9[t, i] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 2, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_0[t, i] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 0, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_7[t, i] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 0, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_3[t, i, j] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 3, j, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_5[t, i] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 4, -1 + _PB_N, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_1[t, i] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 1, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_8[t, i] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 1, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_11[t, i, j] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 3, j, 1] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_2[t, i] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 2, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_4[t, i, j] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 3, j, 1] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_12[t, i] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 4, -1 + _PB_N, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_13[t, i, j] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 5, -j, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_10[t, i, j] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 3, j, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_6[t, i, j] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 5, -j, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i }

#create code stop

#loop tile stop

#######################################################################

#######################################################################

#global schedule:
[_PB_TSTEPS, _PB_N, e, d, c, a, f, b] -> { S_9[t, i] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 2, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_0[t, i] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 0, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_7[t, i] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 0, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_3[t, i, j] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 3, j, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_5[t, i] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 4, -1 + _PB_N, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_1[t, i] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 1, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_8[t, i] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 1, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_11[t, i, j] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 3, j, 1] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_2[t, i] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 2, 0, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_4[t, i, j] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 3, j, 1] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_12[t, i] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 4, -1 + _PB_N, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_13[t, i, j] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 5, -j, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_10[t, i, j] -> [0, t, 1, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 3, j, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i; S_6[t, i, j] -> [0, t, 0, w0 = 0, h0, 0, 0, 0, 0, 0, tw0 = 0, i, 5, -j, 0] : 0 < t <= _PB_TSTEPS and 0 < i <= -2 + _PB_N and 0 < j <= -2 + _PB_N and -15 + i <= 16h0 <= i }

#######################################################################

#######################################################################

#Does global schedule respects oryginal loop RaW deps? -> True

#Does global schedule respects oryginal loop WaW deps? -> True

#Does global schedule respects oryginal loop WaR deps? -> True

#######################################################################
